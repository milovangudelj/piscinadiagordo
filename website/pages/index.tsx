import type { NextPage } from "next";
import Head from "next/head";
import Image from "next/image";
import Link from "next/link";
import groq from "groq";

import client from "../lib/sanity";

interface Props {
	posts: any;
}

const Home: NextPage<Props> = ({ posts }) => {
	return (
		<div className="">
			<Head>
				<title>Create Next App</title>
				<meta name="description" content="Generated by create next app" />
				<link rel="icon" href="/favicon.ico" />
			</Head>

			<main>
				<h1>Welcome to a blog!</h1>
				{posts.length > 0 &&
					posts.map(
						({
							_id,
							title = "",
							slug = "",
							publishedAt = "",
						}: {
							_id: string;
							title: string;
							slug: any;
							publishedAt: string;
						}) =>
							slug && (
								<li key={_id}>
									<Link
										href="/post/[slug]"
										as={`/post/${slug.current}`}
									>
										<a>{title}</a>
									</Link>{" "}
									({new Date(publishedAt).toDateString()})
								</li>
							)
					)}
			</main>

			<footer className="">
				<a
					href="https://vercel.com?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
					target="_blank"
					rel="noopener noreferrer"
				>
					Powered by{" "}
					<span className="">
						<Image
							src="/vercel.svg"
							alt="Vercel Logo"
							width={72}
							height={16}
						/>
					</span>
				</a>
			</footer>
		</div>
	);
};

export const getStaticProps = async () => {
	const posts = await client.fetch(
		groq`*[_type == "post" && publishedAt < now()] | order(publishedAt desc)`
	);

	return {
		props: {
			posts,
		},
	};
};

export default Home;
